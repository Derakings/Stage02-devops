version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app_blue
      - app_green
    networks:
      - app_network
    restart: unless-stopped

  # Blue Service (Primary)
  app_blue:
    image: ${BLUE_IMAGE:-yimikaade/wonderful:devops-stage-two}
    container_name: app_blue
    ports:
      - "8081:3000"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE:-blue-v1.0}
      - PORT=3000
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 3s
      timeout: 2s
      retries: 1
      start_period: 5s

  # Green Service (Backup)
  app_green:
    image: ${GREEN_IMAGE:-yimikaade/wonderful:devops-stage-two}
    container_name: app_green
    ports:
      - "8082:3000"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN:-green-v1.0}
      - PORT=3000
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 3s
      timeout: 2s
      retries: 1
      start_period: 5s

  # Alert Watcher Service
  alert_watcher:
    build:
      context: .
      dockerfile: Dockerfile.watcher
    container_name: alert_watcher
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2.0}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
    volumes:
      - nginx_logs:/var/log/nginx:ro
    depends_on:
      - nginx
    networks:
      - app_network
    restart: unless-stopped

volumes:
  nginx_logs:

networks:
  app_network:
    driver: bridge